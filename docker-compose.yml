version: '3.8'

services:
    nginx:
        container_name: ${SERVICE_PREFIX}-nginx
        build:
            context: ./nginx
        volumes:
            - ${APP_PATH_HOST}:${APP_DIR_TO_PATH}
        tty: true
        ports:
            - "${NGINX_PORT}:80"
        networks:
            - dev-back
        links:
            - php-fpm

    php-fpm:
        container_name: ${SERVICE_PREFIX}-php-fpm
        build:
            context: ./php-fpm
            args:
                - PHP_VERSION=$PHP_VERSION
        volumes:
            - ${APP_PATH_HOST}:${APP_DIR_TO_PATH}
        tty: true
#        links:
#            - postgres
#            - redis
#            - rabbitmq
        networks:
            - dev-back
#        environment:
#            - "DB_PORT=5432"
#            - "DB_HOST=postgres"
#            - "REDIS_PORT=6379"
#            - "REDIS_HOST=redis"

#    redis:
#        container_name: ${SERVICE_PREFIX}-redis
#        image: redis:5.0
#        ports:
#            - "6379:6379"
#        volumes:
#            - ./redis:/var/lib/redis
#        networks:
#            - dev-back

#    postgres:
#        container_name: ${SERVICE_PREFIX}-postgres
#        image: postgres:13.3
#        ports:
#            - "5432:5432"
#        networks:
#            - dev-back
#        volumes:
#            - ${DB_PATH_HOST}/postgres:/data/postgres
#        tty: true
#        environment:
#            POSTGRES_PASSWORD: 123456
#            POSTGRES_USER: postgres
#            PGDATA: /data/postgres
            
#    mongodb:
#        image: mongo:latest
#        container_name: mongodb
#        environment:
#            MONGO_INITDB_ROOT_USERNAME: root
#            MONGO_INITDB_ROOT_PASSWORD: 123456
#        ports:
#            - 27017:27017
#        volumes:
#            - ${DB_PATH_HOST}/mongo:/data/db

#    mailer:
#        container_name: ${SERVICE_PREFIX}-mailer
#        image: schickling/mailcatcher
#        ports:
#            - "1025:1025"
#            - "1080:1080"
#        networks:
#            - dev-back

#    rabbitmq:
#        container_name: ${SERVICE_PREFIX}-rabbitmq
#        image: rabbitmq:3-management
#        ports:
#            - "5672:5672"
#            - "15672:15672"
#        volumes:
#            - ./rabbitmq/data:/var/lib/rabbitmq
#        networks:
#            - dev-back

networks:
    dev-back:
        driver: bridge
        name: dockernet-local

